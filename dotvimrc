" .vimrc
" Ideas picked from Steve Losh <steve@stevelosh.com>
" Source: http://bitbucket.org/sjl/dotfiles/src/tip/vim/
" 3/03/2012

" Preamble ---------------------------------------------------------------- {{{

filetype off
call pathogen#runtime_append_all_bundles()
filetype plugin indent on

" support 256 colors in terminal mode
set t_Co=256

set nocompatible

set modelines=0

" tabs, spacing, etc
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set wrap
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85
set list
set listchars=tab:▸\ ,eol:¬


" encoding
set encoding=utf-8
set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set undofile


" autoclose parentheses, brackets, and braces.
imap { {}<left>
imap ( ()<left>
imap [ []<left>
" open, close, enter pairs
noremap! "" ""<left>
noremap! '' ''<left>


" Color scheme {{{
syntax on
set background=dark
colorscheme molokai

" leader
let mapleader = ","

" fold tag fuction for HTML
nnoremap <leader>ft Vatzf

" sort properties in CSS
nnoremap <leader>S ?{<CR>jV/^\s*\}?$<CR>k:sort<CR>:noh<CR>


" searching & moving
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
nnoremap <tab> %
vnoremap <tab> %

"nnoremap <up> <nop>
"nnoremap <down> <nop>
"nnoremap <left> <nop>
"nnoremap <right> <nop>
"inoremap <up> <nop>
"inoremap <down> <nop>
"inoremap <left> <nop>
"inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" disable F1 help
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

nnoremap . :

" save everything when loosing focus
au FocusLost * :wa
au FocusLost * :silent! wall                 " Save on FocusLost
au FocusLost * call feedkeys("\<C-\>\<C-n>") " Return to normal mode on FocustLost


" quick escaping
inoremap jj <ESC>

" new vertical split and move
nnoremap <leader>w <C-w>v<C-w>l

" move around splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l


" set usedful status line
"set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
set statusline=%F%m%r%h%w\ [type=%Y]\ [len=%L]\ [%p%%]\ [pos=%04l,%03v]
set laststatus=2 " Always show the statusline on the 2nd last row


"When opening a file, always jump to the last cursor position
autocmd BufReadPost *                                                           
\ if line("'\"") > 0 && line ("'\"") <= line("$") |                             
\   exe "normal g'\"" |                                                         
\ endif


" automatically reload vimrc when it's saved
au BufWritePost .vimrc so ~/.vimrc

" open .vimrc in a vertical split to edit on the fly
nnoremap <leader>ev <C-w><C-v><C-l>:e $MYVIMRC<cr>


" md is Markdown, not Modula2
au BufRead,BufNewFile *.md set filetype=markdown

